/*
 *  jQuery jMap - v0.1
 *  A jQuery Google Maps wrapper plugin.
 *  https://github.com/tormjens/jmap
 *
 *  Made by Tor Morten Jensen
 *  Under MIT License
 */
!function(a,b,c,d){function e(b,c){this.el=b,this.$el=a(b),this.$el.wrapAll('<div class="jmap-container"></div>'),this.$parent=this.$el.parent(),this.settings=a.extend({},a.fn[f].defaults,c),this.map=null,this.center=null,this.markers=null,this.map_markers=[],this.init()}var f="jMap";e.prototype={init:function(){"object"==typeof google&&"object"==typeof google.maps?(this._renderMap(),this._aspectRatio()):this._error("Google Maps API is not loaded. Load it before loading jMap.")},_runFunction:function(a,b){"function"==typeof a&&a.call(this,b)},_renderMap:function(){this._findMarkers(),0===this.$el.height()&&(this._error("Container has no height. Setting it to "+this.settings.height+"px."),this.$el.height(this.settings.height));var a="";switch(this.settings.type){case"hybrid":a=google.maps.MapTypeId.HYBRID;break;case"satellite":a=google.maps.MapTypeId.SATELLITE;break;case"terrain":a=google.maps.MapTypeId.TERRAIN;break;default:a=google.maps.MapTypeId.ROADMAP}var b={center:new google.maps.LatLng(this.settings.lat,this.settings.lng),zoom:this.settings.zoom,mapTypeId:a};this._runFunction(this.settings.beforeMapInit),this.map=new google.maps.Map(this.$el[0],b),this._runFunction(this.settings.afterMapInit),this._runFunction(this.settings.beforeMarkerAdd),this._addMarkers(),this._runFunction(this.settings.afterMarkerAdd),this.settings.centerMarkers?(this._runFunction(this.settings.beforeCenter),this.centerMap(),this._runFunction(this.settings.afterCenter)):(this._runFunction(this.settings.beforeGeoCenter),this.geoCenter(),this._runFunction(this.settings.afterGeoCenter)),this._doCenter()},_doCenter:function(){if(null!==this.center){var a=this;google.maps.event.addDomListener(b,"resize",function(){a.map.setCenter(a.center)})}},_findMarkers:function(){var b=[];this.$el.find("div.marker").each(function(){var c=a(this).data("lat"),d=a(this).data("lng"),e=a(this).html(),f={lat:c,lng:d,content:e};b.push(f)}),null!==this.settings.markers&&a.each(this.settings.markers,function(a,c){b.push(c)}),this.markers=b},_addMarkers:function(){if(null!==this.markers){var b=this;a.each(this.markers,function(a,c){b.addMarker(c)})}},_error:function(a){this.settings.debug===!0&&console.error(a)},_aspectRatio:function(){if(this.settings.aspectRatio!==!1){var a=this.$parent,b=this.$el,c=56.25,d=this.settings.aspectRatio.split("/");c=d[1]/d[0]*100,a.css({position:"relative","padding-top":c+"%"}),b.css({position:"absolute",top:"0",bottom:"0",left:"0",right:"0",height:"auto"})}},addMarker:function(a){var b=new google.maps.Marker({position:new google.maps.LatLng(a.lat,a.lng),map:this.map});this.map_markers.push(b);var c=this;if("undefined"!=typeof a.content){var d=new google.maps.InfoWindow({content:a.content});google.maps.event.addListener(b,"click",function(){d.open(this.map,b)})}if(a.events)for(var e in a.events)google.maps.event.addListener(b,e,c.markerEvent(e,c,this,b,a));return!0},markerEvent:function(a,b,c,d,e){e.events[a].call(b,c,d,e)},centerMap:function(){var b=new google.maps.LatLngBounds;a.each(this.map_markers,function(a,c){var d=new google.maps.LatLng(c.position.lat(),c.position.lng());b.extend(d)}),1===this.map_markers.length?(this.map.setCenter(b.getCenter()),this.map.setZoom(16)):this.map.fitBounds(b),this.center=b.getCenter()},geoCenter:function(){if(navigator.geolocation){var a=this;navigator.geolocation.getCurrentPosition(function(b){var c=new google.maps.LatLng(b.coords.latitude,b.coords.longitude);a.map.setCenter(c),this.center=c},function(b){a._error(b.message)})}else this._error("The user navigator is unavailiable.")},destroy:function(){this.$el.html(""),this.$el.attr("style",""),this.$el.removeData()},get:function(){return this.map}},a.fn[f]=function(b){var c=arguments;if(b===d||"object"==typeof b)return this.each(function(){a.data(this,"plugin_"+f)||a.data(this,"plugin_"+f,new e(this,b))});if("string"==typeof b&&"_"!==b[0]&&"init"!==b){if(0===Array.prototype.slice.call(c,1).length&&-1!==a.inArray(b,a.fn[f].getters)){var g=a.data(this[0],"plugin_"+f);return g[b].apply(g,Array.prototype.slice.call(c,1))}return this.each(function(){var d=a.data(this,"plugin_"+f);d instanceof e&&"function"==typeof d[b]&&d[b].apply(d,Array.prototype.slice.call(c,1))})}},a.fn[f].getters=["get","geoCenter","centerMap"],a.fn[f].defaults={lat:62.1,lng:10.1,height:350,centerResize:!0,aspectRatio:"16/9",zoom:16,type:"roadmap",markers:null,centerMarkers:!0,geoCenter:!1,debug:!1,beforeMapInit:null,afterMapInit:null,beforeMarkerAdd:null,afterMarkerAdd:null,beforeCenter:null,afterCenter:null,beforeGeoCenter:null,afterGeoCenter:null}}(jQuery,window,document);